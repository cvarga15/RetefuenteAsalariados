/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Retefuente;

import java.awt.Image;
import java.awt.Toolkit;
import java.text.DecimalFormat;

/**
 * Aplicación para realiza la liquidación de la retención en la fuente para asalariados segun lo establecido en el articulo 383 del ET.
 * @author Cristian Camilo Vargas González
 * @version 1.1
 */
public class IngresarDatos extends javax.swing.JFrame {

    /**
     * Creates new form IngresarDatos
     */
    public IngresarDatos() {
        initComponents();
        this.setLocationRelativeTo(null);//instrucción para que la interfaz aparezca en el centro
        
    }
    //Declaración de función para escoger y establecer la imagen correspondiente al icono de la aplicación
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/calculadora.png"));
        return retValue;
                
    }
    //Declaración de variables públicas para recibir la información del formulario "IngresarDatos" y enviarlo al formulario "Resultado"
    //Las variables Str almacenan la conversión de los datos a String
    public static int salario = 0;
    public static String salarioStr = "";
    public static int otrosIngresos = 0;
    public static String otrosIngresosStr = "";
    public static int fondoSolidaridadPension = 0;
    public static String fondoSolidaridadPensionStr = "";
    public static int ingresosBasicos = 0;
    public static String ingresosBasicosStr = "";
    public static int eps = 0;
    public static String epsStr = "";
    public static int pension = 0;
    public static String pensionStr = "";
    public static int voluntariosPension = 0;
    public static String voluntariosPensionStr = "";
    public static int ingresosNoConstitutivos = 0;
    public static String ingresosNoConstitutivosStr = "";
    public static int ingresosNetos = 0;
    public static String ingresosNetosStr = "";
    public static int interesesVivienda = 0;
    public static String interesesViviendaStr = "";
    public static int prepagada = 0;
    public static String prepagadaStr = "";
    public static int dependientes = 0;
    public static String dependientesStr = "";
    public static int deduccion = 0;
    public static String deduccionStr = "";
    public static int afc = 0;
    public static String afcStr = "";
    public static int rentaExenta25 = 0;
    public static String rentaExenta25Str = "";
    public static int exenta = 0;
    public static String exentaStr = "";
    public static int baseGravable = 0;
    public static String baseGravableStr = "";
    public static double baseReUvt = 0;
    public static String baseReUvtStr = "";
    public static double retencionUvt = 0;
    public static String retencionUvtStr = "";
    public static double valorRetencion = 0;
    public static String valorRetencionStr = "";
    public static double valorRetencionInt = 0;
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtOtrosIngresos = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtVoluntariosPension = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtInteresesVivienda = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPrepagada = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDependientes = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        txtAfc = new javax.swing.JTextField();
        jButtonLiquidar = new javax.swing.JButton();
        txtSalario = new javax.swing.JTextField();
        jLabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setPreferredSize(new java.awt.Dimension(710, 450));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Ingresa los siguientes datos:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("¿Cuál es tu salario como empleado?");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 240, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("¿tienes otros ingresos?");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 320, -1));
        getContentPane().add(txtOtrosIngresos, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 110, 140, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Comencemos a liquidar");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Si haces aportes voluntarios a pensión ingresa el valor de aporte mensual");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 470, -1));
        getContentPane().add(txtVoluntariosPension, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 150, 140, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Si tienes créditos hipotecarios, ingresa el valor de los intereses");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 460, -1));
        getContentPane().add(txtInteresesVivienda, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 190, 140, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Si pagas medicina prepagada, ingresa el valor promedio mensual del año pasado");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));
        getContentPane().add(txtPrepagada, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 230, 140, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("¿Tienes dependientes económicos?, si la respuesta es si pon 1, si es no pon 0 (cero)");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, -1, -1));

        txtDependientes.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1, 1));
        getContentPane().add(txtDependientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 270, 140, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("¿Tienes AFC?, si es si pon el valor que aportas mensualmente");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));
        getContentPane().add(txtAfc, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 310, 140, -1));

        jButtonLiquidar.setBackground(new java.awt.Color(204, 0, 51));
        jButtonLiquidar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonLiquidar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonLiquidar.setText("Liquidar");
        jButtonLiquidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLiquidarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonLiquidar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 360, -1, -1));

        txtSalario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalarioActionPerformed(evt);
            }
        });
        getContentPane().add(txtSalario, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 70, 140, -1));

        jLabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondo.jpg"))); // NOI18N
        getContentPane().add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLiquidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLiquidarActionPerformed
        //Obtención de los datos a liquidar a través del formulario "IngresarDatos" y enviados al formulario"Resultado"
        Ingresos ingresos = new Ingresos(0,0,0,0,0,0,0,0,0,0,0,0,0,0); //Creación de nuevo objeto para almacenar los datos ingresados en la clase "Ingresos"
        //Salario
        salarioStr = txtSalario.getText();
        salario = Integer.parseInt(salarioStr); //Función para convertir un dato String a Integer x = Integer.parseInt(yStr);
        ingresos.setSalario(salario);
        //Otros ingresos
        otrosIngresosStr = txtOtrosIngresos.getText();
        otrosIngresos = Integer.parseInt(otrosIngresosStr);//Función para convertir un dato String a Integer x = Integer.parseInt(yStr);
        ingresos.setOtrosIngresos(otrosIngresos);
        //Ingresos Brutos
        ingresosBasicos = ingresos.getIngresosBasicos();
        ingresosBasicosStr =(String.valueOf(ingresosBasicos));//Función para convertir un dato Integer a String xStr =(String.valueOf(y));
        //Eps
        eps = ingresos.getEps();
        epsStr =(String.valueOf(eps));//Función para convertir un dato Integer a String xStr =(String.valueOf(y));
        //Pension
        pension = ingresos.getPension();
        pensionStr =(String.valueOf(pension));//Función para convertir un dato Integer a String xStr =(String.valueOf(y));
        //Fondo de Solidaridad Pensional
        if (ingresos.getSalario()>4000000){
            fondoSolidaridadPension=(ingresos.getSalario()*1/100); 
        }
        fondoSolidaridadPensionStr =(String.valueOf(fondoSolidaridadPension));//Función para convertir un dato Integer a String xStr =(String.valueOf(y));
        ingresos.setFondoSolidaridadPension(fondoSolidaridadPension);
        //Aportes Voluntarios de pension
        voluntariosPensionStr = txtVoluntariosPension.getText();
        voluntariosPension = Integer.parseInt(voluntariosPensionStr);//Función para convertir un dato String a Integer x = Integer.parseInt(yStr);
        ingresos.setVoluntariosPension(voluntariosPension);
        //Total ingresos no constitutivos de renta
        ingresosNoConstitutivos = ingresos.getIngresosNoConstitutivos();
        ingresosNoConstitutivosStr =(String.valueOf(ingresosNoConstitutivos));//Función para convertir un dato Integer a String xStr =(String.valueOf(y));
        //Total Ingresos Netos
        ingresosNetos = ingresos.getIngresosNetos();
        ingresosNetosStr =(String.valueOf(ingresosNetos));//Función para convertir un dato Integer a String xStr =(String.valueOf(y));
        //Deducciones
        ExentasDeducciones deducciones = new ExentasDeducciones(0,0,0,0,0,0,0,0,0,0,0,0,0);//Creación de nuevo objeto para almacenar los datos ingresados en la clase "Deduccines"
        //Intereses de Vivienda
        interesesViviendaStr = txtInteresesVivienda.getText();
        interesesVivienda = Integer.parseInt(interesesViviendaStr);//Función para convertir un dato String a Integer x = Integer.parseInt(yStr);
        deducciones.setInteresesVivienda(interesesVivienda);
        //Medicina Prepagada
        prepagadaStr = txtPrepagada.getText();
        prepagada = Integer.parseInt(prepagadaStr);//Función para convertir un dato String a Integer x = Integer.parseInt(yStr);
        deducciones.setPrepagada(prepagada);
        //Dependientes Economicos
        dependientesStr = (txtDependientes.getValue().toString());
        dependientes = Integer.parseInt(dependientesStr);//Función para convertir un dato String a Integer x = Integer.parseInt(yStr);
        if (dependientes==1){
            dependientes = (ingresos.getIngresosBasicos()*10/100);
        }
        deducciones.setDependientes(dependientes);
        dependientesStr =(String.valueOf(dependientes));//Función para convertir un dato Integer a String xStr =(String.valueOf(y));
        // Total Deducciones
        deduccion = deducciones.getDeducciones();
        deduccionStr =(String.valueOf(deduccion));//Función para convertir un dato Integer a String xStr =(String.valueOf(y));
        //Rentas Exentas
        ExentasDeducciones exentas = new ExentasDeducciones(0,0,0,0,0,0,0,0,0,0,0,0,0);//Creación de nuevo objeto para almacenar los datos ingresados en la clase "Exentas"
        afcStr = txtAfc.getText();
        afc = Integer.parseInt(afcStr);//Función para convertir un dato String a Integer x = Integer.parseInt(yStr);
        exentas.setAfc(afc);
        //Renta Exenta del 25%
        rentaExenta25 =(((ingresos.getIngresosNetos()-deducciones.getDeducciones()-exentas.getAfc())*25/100));
        exentas.setRentaExenta25(rentaExenta25);
        rentaExenta25Str =(String.valueOf(rentaExenta25));//Función para convertir un dato Integer a String xStr =(String.valueOf(y));
        //Total Rentas Exentas
        exenta = exentas.getExentas();
        exentaStr =(String.valueOf(exenta));//Función para convertir un dato Integer a String xStr =(String.valueOf(y));
        //Liquidacion
        Liquidacion base = new Liquidacion(0,0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0);//Creación de nuevo objeto para almacenar los datos ingresados en la clase "Liquidacion"
        //Base Gravable
        baseGravable = (ingresos.getIngresosNetos()-deducciones.getDeducciones()-exentas.getExentas());
        base.setBaseGravable(baseGravable);
        baseGravableStr =(String.valueOf(baseGravable));//Función para convertir un dato Integer a String xStr =(String.valueOf(y));
        //Base Gravable en UVT
        baseReUvt = (base.getBaseGravable()/base.getValorUvt());
        base.setBaseReUvt(baseReUvt);
        baseReUvtStr =(String.valueOf(baseReUvt));//Función para convertir un dato Integer a String xStr =(String.valueOf(y));
        //Liquidacion retencion en UVT
        if (base.getBaseReUvt()<95){
            retencionUvt = (base.getBaseReUvt()*0);
        }
            else if (base.getBaseReUvt()>95 && base.getBaseReUvt()<=150){
                retencionUvt = ((base.getBaseReUvt()-95)*19/100);
            }
                else if (base.getBaseReUvt()>150 && base.getBaseReUvt()<=360){
                    retencionUvt = (((base.getBaseReUvt()-150)*28/100)+10);
                }
                    else if (base.getBaseReUvt()>360 && base.getBaseReUvt()<=640){
                        retencionUvt = (((base.getBaseReUvt()-360)*33/100)+69);
                    }
                        else if (base.getBaseReUvt()>640 && base.getBaseReUvt()<=945){
                            retencionUvt = (((base.getBaseReUvt()-640)*33/100)+162);
                        }
                            else if (base.getBaseReUvt()>945 && base.getBaseReUvt()<=2300){
                                retencionUvt = (((base.getBaseReUvt()-945)*37/100)+268);
                            }
                                else if (base.getBaseReUvt()>2300){
                                    retencionUvt = (((base.getBaseReUvt()-2300)*39/100)+770);
                                }
        base.setRetencionUvt(retencionUvt);
        retencionUvtStr =(String.valueOf(retencionUvt));//Función para convertir un dato Integer a String xStr =(String.valueOf(y));
        //Valor retencion
        valorRetencion =(base.getRetencionUvt()*base.getValorUvt());
        valorRetencionStr =(String.valueOf(valorRetencion));//Función para convertir un dato Integer a String xStr =(String.valueOf(y));
        
        Resultado resultado = new Resultado();//objeto resultado, que al precionar el boton lleve a la clase "Resultado"
            resultado.setVisible(true);
            this.setVisible(false);
        
    }//GEN-LAST:event_jButtonLiquidarActionPerformed

    private void txtSalarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalarioActionPerformed
                // TODO add your handling code here:
    }//GEN-LAST:event_txtSalarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IngresarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IngresarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IngresarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IngresarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IngresarDatos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLiquidar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JTextField txtAfc;
    private javax.swing.JSpinner txtDependientes;
    private javax.swing.JTextField txtInteresesVivienda;
    private javax.swing.JTextField txtOtrosIngresos;
    private javax.swing.JTextField txtPrepagada;
    private javax.swing.JTextField txtSalario;
    private javax.swing.JTextField txtVoluntariosPension;
    // End of variables declaration//GEN-END:variables
}
